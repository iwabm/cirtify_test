{"ast":null,"code":"var _jsxFileName = \"/Users/iwabm/teknikio/circuify/src/TutorialBox.jsx\";\nimport React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { useState } from \"react\";\nlet tutorialPages = [{\n  name: \"About\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, \"Circuify - Logic Circuit Visualizer\"), \" is free, open-source tool for building and visualizing logic circuits.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, \"Most notable features:\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tutorial-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Design logic circuits with\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"intuitive and easy to use user interface\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Great range of different\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"logic gates, inputs, outputs...\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Support for\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"making custom integrated circuits\"), \" for easier project organization and endless creation possibilities\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"And many more to explore\")), /*#__PURE__*/React.createElement(Image, {\n    className: \"img-fluid\",\n    src: \"./Images/TitleBanner.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }))\n}, {\n  name: \"UI Introduction\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"User Interface can be separated into three parts:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tutorial-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Sidebar - \"), \"containts all the elements and the tools\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Navbar - \"), \"containts all the options you would expect to find like starting new project, canvas manipulation, element selection...\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Canvas - \"), \"main part of the application where elements are placed and manipulated\")), /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/SidebarTutorial.jpg\",\n    alt: \"First slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Sidebar\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/NavTutorial.jpg\",\n    alt: \"Second slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Navbar\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/CanvasTutorial.jpg\",\n    alt: \"Third slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Canvas\")))))\n}, {\n  name: \"Element Manipulation\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"Placing an element\"), \" is done by selecting the element on the sidebar and then clicking on the desired location on the canvas.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Selecting an element\"), \" can be done in multiple ways:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tutorial-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Selecting the single element by simply clicking on it\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Selecting single or group of elements by creating the rectangular selection\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Selecting all elements by choosing select all option under \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 31\n    }\n  }, \"Edit \", \">\", \" Select All\"))), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Dragging an element\"), \" is done by selecting it and then dragging the mouse to the desired location on the canvas.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, \"Deleting an element\"), \" can be done in two ways:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tutorial-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Selecting elements and then hitting\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"DELETE key\"), \" on the keyboard\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Selecting elements and choosing delete option under\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"Edit \", \">\", \" Delete Selection\"))), /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/PlacingElementTutorial.gif\",\n    alt: \"First slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, \"Placing an element\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/SelectingGroupTutorial.gif\",\n    alt: \"Second slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, \"Selecting group of elements\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/DraggingElementTutorial.gif\",\n    alt: \"Third slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, \"Dragging an element\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/DeletingElementsTutorial.gif\",\n    alt: \"Fourth slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Deleting elements\")))))\n}, {\n  name: \"Element Wiring\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Crucial part of every logic curcuit are\", \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, \"wires\"), \", connecting inputs and outputs of elements.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Adding wire\"), \" is done by firstly selecting input(output) of the first element you wish to connect. After that, valid output(input) joint needs to be selected(indicated by the blue color) in order to add the wire.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, \"Removing wire\"), \" is done by selecting Remove Wire tool on the sidebar and then selecting input and output joints of the wire you wish to remove.\"), /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/ConnectingElementsTutorial.gif\",\n    alt: \"First slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 29\n    }\n  }, \"Connecting elements\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/RemovingWireTutorial.gif\",\n    alt: \"Second slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, \"Removing wire\")))))\n}, {\n  name: \"Integrated Circuits\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, \"One of the most important features of Circuify is the support for \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }, \"Integrated Circuits.\"), \" Once you create IC, you can use it repeatedly, which allows for better organized and more structured design.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, \"Creating circuit\"), \" is done by clicking on the + button located on the tab bar on top of the canvas. Once you press it, you will be prompted to choose a name for your circuit.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \"Inputs and outputs of the integrated circuit:\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tutorial-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, \"Inputs will be assignable on the integrated circuit only for the inputs of type \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 48\n    }\n  }, \"Switch\"), \". Other inputs will only be manageable in the circuit itself.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, \"Outputs will be assignable on the integrated circuit only for the outputs of type \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 54\n    }\n  }, \"Light Bulb\"), \". Other outputs will only be manageable in the circuit itself.\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, \"It is highly recommended to name every Switch and Light Bulb in the circuit, as those names will be visible on the Integrated Circuit element.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, \"Adding Integrated Circuit element\"), \" - Once the circuit is created, it can be used across all the other circuits in form of an integrated circuit. Just locate the element at the bottom of the Sidebar and add it to a canvas.\"), /*#__PURE__*/React.createElement(Carousel, {\n    interval: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/CreatingCircuitTutorial.gif\",\n    alt: \"First slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, \"Creating circuit\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/NamingSwitchTutorial.gif\",\n    alt: \"Second slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }, \"Naming a switch\"))), /*#__PURE__*/React.createElement(Carousel.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"d-block w-100\",\n    src: \"./Images/AddingCircuitTutorial.gif\",\n    alt: \"Third slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, \"Adding integrated circuit\")))))\n}, {\n  name: \"Finishing Up\",\n  content: /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tutorial-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, \"That is about everything you need to know in order to use Circuify. All that is left now is to let your imagination run wild and create awesome things. Hopefully you'll enjoy using it as much as I enjoyed making it.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }, \"If you get stuck at any point, you can always re-read this tutorial by going under \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 45\n    }\n  }, \"Help \", \">\", \" Tutorial\"), \".\"), /*#__PURE__*/React.createElement(\"img\", {\n    class: \"d-block w-100\",\n    src: \"./Images/CircuifySevenSegment.gif\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }))\n}];\nlet currentPage = 0;\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0);\n  return () => setValue(value => ++value);\n}\n\nfunction showFooter(props, forceUpdate) {\n  if (props.pages.pageToShow === -1) {\n    return /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"page-number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, \"(\", currentPage + 1, \"/\", tutorialPages.length, \")\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        if (currentPage > 0) {\n          currentPage--;\n          forceUpdate();\n        }\n      },\n      variant: \"info\",\n      className: currentPage <= 0 ? \"disabled\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        if (currentPage + 1 < tutorialPages.length) {\n          currentPage++;\n          forceUpdate();\n        } else {\n          props.setShow(false);\n          forceUpdate();\n        }\n      },\n      variant: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, currentPage + 1 >= tutorialPages.length ? \"Finish\" : \"Next\"));\n  } else return;\n}\n\nexport default function TutorialBox(props) {\n  const forceUpdate = useForceUpdate();\n\n  if (props.pages.pageToShow !== -1) {\n    currentPage = props.pages.pageToShow;\n  }\n\n  localStorage.setItem(\"tutorialShown\", true);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: props.tutorialShow.show,\n    onHide: () => {\n      currentPage = 0;\n      props.setShow(false);\n      forceUpdate();\n    },\n    dialogClassName: \"modal-60w\",\n    \"aria-labelledby\": \"tutorial-modal-label\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 21\n    }\n  }, tutorialPages[currentPage].name)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, tutorialPages[currentPage].content), showFooter(props, forceUpdate)));\n}","map":{"version":3,"sources":["/Users/iwabm/teknikio/circuify/src/TutorialBox.jsx"],"names":["React","Modal","Button","Image","Carousel","useState","tutorialPages","name","content","currentPage","useForceUpdate","value","setValue","showFooter","props","forceUpdate","pages","pageToShow","length","setShow","TutorialBox","localStorage","setItem","tutorialShow","show"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport { useState } from \"react\";\n\nlet tutorialPages = [\n    {\n        name: \"About\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    <strong>Circuify - Logic Circuit Visualizer</strong> is\n                    free, open-source tool for building and visualizing logic\n                    circuits.\n                </p>\n                <p>\n                    <strong>Most notable features:</strong>\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Design logic circuits with{\" \"}\n                        <strong>\n                            intuitive and easy to use user interface\n                        </strong>\n                    </li>\n                    <li>\n                        Great range of different{\" \"}\n                        <strong>logic gates, inputs, outputs...</strong>\n                    </li>\n                    <li>\n                        Support for{\" \"}\n                        <strong>making custom integrated circuits</strong> for\n                        easier project organization and endless creation\n                        possibilities\n                    </li>\n                    <li>And many more to explore</li>\n                </ul>\n                <Image className=\"img-fluid\" src=\"./Images/TitleBanner.png\" />\n            </div>\n        ),\n    },\n    {\n        name: \"UI Introduction\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>User Interface can be separated into three parts:</p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        <strong>Sidebar - </strong>\n                        containts all the elements and the tools\n                    </li>\n                    <li>\n                        <strong>Navbar - </strong>\n                        containts all the options you would expect to find like\n                        starting new project, canvas manipulation, element\n                        selection...\n                    </li>\n                    <li>\n                        <strong>Canvas - </strong>\n                        main part of the application where elements are placed\n                        and manipulated\n                    </li>\n                </ul>\n                {/* <Image className=\"img-fluid\" src=\"./Images/TitleBanner.png\" /> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/SidebarTutorial.jpg\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Sidebar</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/NavTutorial.jpg\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Navbar</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/CanvasTutorial.jpg\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Canvas</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Element Manipulation\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    <strong>Placing an element</strong> is done by selecting the\n                    element on the sidebar and then clicking on the desired\n                    location on the canvas.\n                </p>\n                <p>\n                    <strong>Selecting an element</strong> can be done in\n                    multiple ways:\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Selecting the single element by simply clicking on it\n                    </li>\n                    <li>\n                        Selecting single or group of elements by creating the\n                        rectangular selection\n                    </li>\n                    <li>\n                        Selecting all elements by choosing select all option\n                        under <strong>Edit {\">\"} Select All</strong>\n                    </li>\n                </ul>\n                <p>\n                    <strong>Dragging an element</strong> is done by selecting it\n                    and then dragging the mouse to the desired location on the\n                    canvas.\n                </p>\n                <p>\n                    <strong>Deleting an element</strong> can be done in two\n                    ways:\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Selecting elements and then hitting{\" \"}\n                        <strong>DELETE key</strong> on the keyboard\n                    </li>\n                    <li>\n                        Selecting elements and choosing delete option under{\" \"}\n                        <strong>Edit {\">\"} Delete Selection</strong>\n                    </li>\n                </ul>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/PlacingElementTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Placing an element</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/SelectingGroupTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">\n                                Selecting group of elements\n                            </h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/DraggingElementTutorial.gif\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Dragging an element</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/DeletingElementsTutorial.gif\"\n                            alt=\"Fourth slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Deleting elements</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Element Wiring\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    Crucial part of every logic curcuit are{\" \"}\n                    <strong>wires</strong>, connecting inputs and outputs of\n                    elements.\n                </p>\n                <p>\n                    <strong>Adding wire</strong> is done by firstly selecting\n                    input(output) of the first element you wish to connect.\n                    After that, valid output(input) joint needs to be\n                    selected(indicated by the blue color) in order to add the\n                    wire.\n                </p>\n                <p>\n                    <strong>Removing wire</strong> is done by selecting Remove\n                    Wire tool on the sidebar and then selecting input and output\n                    joints of the wire you wish to remove.\n                </p>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/ConnectingElementsTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Connecting elements</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/RemovingWireTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Removing wire</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Integrated Circuits\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    One of the most important features of Circuify is the\n                    support for <strong>Integrated Circuits.</strong> Once you\n                    create IC, you can use it repeatedly, which allows for\n                    better organized and more structured design.\n                </p>\n                <p>\n                    <strong>Creating circuit</strong> is done by clicking on the\n                    + button located on the tab bar on top of the canvas. Once\n                    you press it, you will be prompted to choose a name for your\n                    circuit.\n                </p>\n                <p>\n                    <strong>\n                        Inputs and outputs of the integrated circuit:\n                    </strong>\n                </p>\n                <ul className=\"tutorial-list\">\n                    <li>\n                        Inputs will be assignable on the integrated circuit only\n                        for the inputs of type <strong>Switch</strong>. Other\n                        inputs will only be manageable in the circuit itself.\n                    </li>\n                    <li>\n                        Outputs will be assignable on the integrated circuit\n                        only for the outputs of type <strong>Light Bulb</strong>\n                        . Other outputs will only be manageable in the circuit\n                        itself.\n                    </li>\n                </ul>\n                <p>\n                    It is highly recommended to name every Switch and Light Bulb\n                    in the circuit, as those names will be visible on the\n                    Integrated Circuit element.\n                </p>\n                <p>\n                    <strong>Adding Integrated Circuit element</strong> - Once\n                    the circuit is created, it can be used across all the other\n                    circuits in form of an integrated circuit. Just locate the\n                    element at the bottom of the Sidebar and add it to a canvas.\n                </p>\n\n                <Carousel interval={null}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/CreatingCircuitTutorial.gif\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Creating circuit</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/NamingSwitchTutorial.gif\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">Naming a switch</h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"./Images/AddingCircuitTutorial.gif\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3 className=\"text-info\">\n                                Adding integrated circuit\n                            </h3>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </div>\n        ),\n    },\n    {\n        name: \"Finishing Up\",\n        content: (\n            <div className=\"tutorial-content\">\n                <p>\n                    That is about everything you need to know in order to use\n                    Circuify. All that is left now is to let your imagination\n                    run wild and create awesome things. Hopefully you'll enjoy\n                    using it as much as I enjoyed making it.\n                </p>\n                <p>\n                    If you get stuck at any point, you can always re-read this\n                    tutorial by going under <strong>Help {\">\"} Tutorial</strong>\n                    .\n                </p>\n                {/* <img\n                    className=\"img-fluid\"\n                    src=\"./Images/CircuifySevenSegment.gif\"\n                ></img> */}\n                <img\n                    class=\"d-block w-100\"\n                    src=\"./Images/CircuifySevenSegment.gif\"\n                ></img>\n            </div>\n        ),\n    },\n];\n\nlet currentPage = 0;\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0);\n    return () => setValue((value) => ++value);\n}\n\nfunction showFooter(props, forceUpdate) {\n    if (props.pages.pageToShow === -1) {\n        return (\n            <Modal.Footer>\n                <span className=\"page-number\">\n                    <strong>\n                        ({currentPage + 1}/{tutorialPages.length})\n                    </strong>\n                </span>\n                <Button\n                    onClick={() => {\n                        if (currentPage > 0) {\n                            currentPage--;\n                            forceUpdate();\n                        }\n                    }}\n                    variant=\"info\"\n                    className={currentPage <= 0 ? \"disabled\" : \"\"}\n                >\n                    Previous\n                </Button>\n                <Button\n                    onClick={() => {\n                        if (currentPage + 1 < tutorialPages.length) {\n                            currentPage++;\n                            forceUpdate();\n                        } else {\n                            props.setShow(false);\n                            forceUpdate();\n                        }\n                    }}\n                    variant=\"info\"\n                >\n                    {currentPage + 1 >= tutorialPages.length\n                        ? \"Finish\"\n                        : \"Next\"}\n                </Button>\n            </Modal.Footer>\n        );\n    } else return;\n}\n\nexport default function TutorialBox(props) {\n    const forceUpdate = useForceUpdate();\n    if (props.pages.pageToShow !== -1) {\n        currentPage = props.pages.pageToShow;\n    }\n\n    localStorage.setItem(\"tutorialShown\", true);\n\n    return (\n        <>\n            <Modal\n                show={props.tutorialShow.show}\n                onHide={() => {\n                    currentPage = 0;\n                    props.setShow(false);\n                    forceUpdate();\n                }}\n                dialogClassName=\"modal-60w\"\n                aria-labelledby=\"tutorial-modal-label\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{tutorialPages[currentPage].name}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{tutorialPages[currentPage].content}</Modal.Body>\n                {showFooter(props, forceUpdate)}\n            </Modal>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}