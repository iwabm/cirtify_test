{"ast":null,"code":"var _jsxFileName = \"/Users/iwabm/teknikio/circuify/src/Tabs.jsx\";\nimport React from \"react\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { Icon } from \"@iconify/react\";\nimport plusSquareOutlined from \"@iconify/icons-ant-design/plus-square-outlined\";\nimport xIcon from \"@iconify/icons-bi/x\";\nTab.defaultProps = {\n  showClose: true\n};\n\nfunction Tab(props) {\n  return /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-dark tab-link nav-link \" + props.activeState + \" \" + (props.content === \"Main\" ? \"px-4 ml-2\" : \"\"),\n    onClick: () => {\n      props.onClick();\n      obj.props.updateState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, props.content, /*#__PURE__*/React.createElement(Button, {\n    className: \"p-0 remove-btn \" + props.activeState + \" \" + (!props.showClose ? \"d-none\" : \"\"),\n    onClick: () => {\n      props.onDelete();\n      obj.props.updateState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: xIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }))));\n}\n\nfunction AddTab(props) {\n  return /*#__PURE__*/React.createElement(NavItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plus-btn btn-dark tab-link nav-link\",\n    onClick: () => {\n      props.onClick();\n      obj.props.updateState();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: plusSquareOutlined,\n    width: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport let tabs = [\"Main\"];\nlet obj;\nexport default class Tabs extends React.Component {\n  constructor(props) {\n    super();\n    sessionStorage.setItem(\"currentCircuit\", \"Main\");\n    sessionStorage.setItem(\"circuits\", tabs);\n    obj = this;\n  }\n\n  setActive(name) {\n    if (tabs.includes(name)) {\n      sessionStorage.setItem(\"currentCircuit\", name);\n      this.setState({});\n    }\n  }\n\n  AddNewTab() {\n    let circuitName = prompt(\"Please enter the name of the circuit:\");\n\n    if (circuitName != null && circuitName !== \"\" && !tabs.includes(circuitName) && circuitName.length <= 20) {\n      tabs.push(circuitName);\n      this.setState({});\n      this.setActive(tabs[tabs.length - 1]);\n      sessionStorage.setItem(\"circuits\", tabs);\n      this.props.updateState();\n    } else if (circuitName === \"\") {\n      alert(\"Circuit creation aborted because chosen name is invalid!\");\n    } else if (tabs.includes(circuitName)) {\n      alert(\"Circuit creation aborted because chosen name already exists!\");\n    } else if (circuitName != null && circuitName.length > 20) {\n      alert(\"Circuit creation aborted because name must be less than 21 characters long!\");\n    }\n  }\n\n  RemoveTab(index) {\n    let conf = window.confirm(\"Are you sure you want to delete \" + tabs[index] + \"?\");\n\n    if (conf === true) {\n      tabs.splice(index, 1);\n      this.setState({});\n\n      if (tabs.length > index) {\n        this.setActive(tabs[index]);\n      } else {\n        this.setActive(tabs[tabs.length - 1]);\n      }\n\n      sessionStorage.setItem(\"circuits\", tabs);\n      this.props.updateState();\n    }\n  }\n\n  render() {\n    if (sessionStorage.getItem(\"NavCommand\") === \"New\") {\n      tabs = [\"Main\"];\n      sessionStorage.setItem(\"currentCircuit\", \"Main\");\n      sessionStorage.setItem(\"circuits\", tabs);\n    }\n\n    return /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      key: 0,\n      content: \"Main\",\n      onClick: () => this.setActive(\"Main\"),\n      activeState: sessionStorage.getItem(\"currentCircuit\") === \"Main\" ? \"active\" : \"\",\n      showClose: false,\n      onDelete: () => this.RemoveTab(0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), tabs.map((name, index) => name !== \"Main\" ? /*#__PURE__*/React.createElement(Tab, {\n      key: index,\n      content: name,\n      onClick: () => this.setActive(name),\n      activeState: sessionStorage.getItem(\"currentCircuit\") === name ? \"active\" : \"\",\n      onDelete: () => this.RemoveTab(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(AddTab, {\n      onClick: () => this.AddNewTab(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/iwabm/teknikio/circuify/src/Tabs.jsx"],"names":["React","NavItem","Nav","Button","Icon","plusSquareOutlined","xIcon","Tab","defaultProps","showClose","props","activeState","content","onClick","obj","updateState","onDelete","AddTab","tabs","Tabs","Component","constructor","sessionStorage","setItem","setActive","name","includes","setState","AddNewTab","circuitName","prompt","length","push","alert","RemoveTab","index","conf","window","confirm","splice","render","getItem","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,kBAAP,MAA+B,gDAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEAC,GAAG,CAACC,YAAJ,GAAmB;AACfC,EAAAA,SAAS,EAAE;AADI,CAAnB;;AAIA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAChB,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EACL,gCACAA,KAAK,CAACC,WADN,GAEA,GAFA,IAGCD,KAAK,CAACE,OAAN,KAAkB,MAAlB,GAA2B,WAA3B,GAAyC,EAH1C,CAFR;AAOI,IAAA,OAAO,EAAE,MAAM;AACXF,MAAAA,KAAK,CAACG,OAAN;AACAC,MAAAA,GAAG,CAACJ,KAAJ,CAAUK,WAAV;AACH,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYKL,KAAK,CAACE,OAZX,eAaI,oBAAC,MAAD;AACI,IAAA,SAAS,EACL,oBACAF,KAAK,CAACC,WADN,GAEA,GAFA,IAGC,CAACD,KAAK,CAACD,SAAP,GAAmB,QAAnB,GAA8B,EAH/B,CAFR;AAOI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,KAAK,CAACM,QAAN;AACAF,MAAAA,GAAG,CAACJ,KAAJ,CAAUK,WAAV;AACH,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAbJ,CADJ,CADJ;AAgCH;;AAED,SAASW,MAAT,CAAgBP,KAAhB,EAAuB;AACnB,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAE,qCADf;AAEI,IAAA,OAAO,EAAE,MAAM;AACXA,MAAAA,KAAK,CAACG,OAAN;AACAC,MAAAA,GAAG,CAACJ,KAAJ,CAAUK,WAAV;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEV,kBAAZ;AAAgC,IAAA,KAAK,EAAC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CADJ;AAaH;;AAED,OAAO,IAAIa,IAAI,GAAG,CAAC,MAAD,CAAX;AACP,IAAIJ,GAAJ;AAEA,eAAe,MAAMK,IAAN,SAAmBnB,KAAK,CAACoB,SAAzB,CAAmC;AAC9CC,EAAAA,WAAW,CAACX,KAAD,EAAQ;AACf;AACAY,IAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,MAAzC;AACAD,IAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCL,IAAnC;AACAJ,IAAAA,GAAG,GAAG,IAAN;AACH;;AAEDU,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZ,QAAIP,IAAI,CAACQ,QAAL,CAAcD,IAAd,CAAJ,EAAyB;AACrBH,MAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyCE,IAAzC;AACA,WAAKE,QAAL,CAAc,EAAd;AACH;AACJ;;AAEDC,EAAAA,SAAS,GAAG;AACR,QAAIC,WAAW,GAAGC,MAAM,CAAC,uCAAD,CAAxB;;AACA,QACID,WAAW,IAAI,IAAf,IACAA,WAAW,KAAK,EADhB,IAEA,CAACX,IAAI,CAACQ,QAAL,CAAcG,WAAd,CAFD,IAGAA,WAAW,CAACE,MAAZ,IAAsB,EAJ1B,EAKE;AACEb,MAAAA,IAAI,CAACc,IAAL,CAAUH,WAAV;AACA,WAAKF,QAAL,CAAc,EAAd;AACA,WAAKH,SAAL,CAAeN,IAAI,CAACA,IAAI,CAACa,MAAL,GAAc,CAAf,CAAnB;AACAT,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCL,IAAnC;AAEA,WAAKR,KAAL,CAAWK,WAAX;AACH,KAZD,MAYO,IAAIc,WAAW,KAAK,EAApB,EAAwB;AAC3BI,MAAAA,KAAK,CAAC,0DAAD,CAAL;AACH,KAFM,MAEA,IAAIf,IAAI,CAACQ,QAAL,CAAcG,WAAd,CAAJ,EAAgC;AACnCI,MAAAA,KAAK,CACD,8DADC,CAAL;AAGH,KAJM,MAIA,IAAIJ,WAAW,IAAI,IAAf,IAAuBA,WAAW,CAACE,MAAZ,GAAqB,EAAhD,EAAoD;AACvDE,MAAAA,KAAK,CACD,6EADC,CAAL;AAGH;AACJ;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACb,QAAIC,IAAI,GAAGC,MAAM,CAACC,OAAP,CACP,qCAAqCpB,IAAI,CAACiB,KAAD,CAAzC,GAAmD,GAD5C,CAAX;;AAIA,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACflB,MAAAA,IAAI,CAACqB,MAAL,CAAYJ,KAAZ,EAAmB,CAAnB;AACA,WAAKR,QAAL,CAAc,EAAd;;AACA,UAAIT,IAAI,CAACa,MAAL,GAAcI,KAAlB,EAAyB;AACrB,aAAKX,SAAL,CAAeN,IAAI,CAACiB,KAAD,CAAnB;AACH,OAFD,MAEO;AACH,aAAKX,SAAL,CAAeN,IAAI,CAACA,IAAI,CAACa,MAAL,GAAc,CAAf,CAAnB;AACH;;AAEDT,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCL,IAAnC;AAEA,WAAKR,KAAL,CAAWK,WAAX;AACH;AACJ;;AAEDyB,EAAAA,MAAM,GAAG;AACL,QAAIlB,cAAc,CAACmB,OAAf,CAAuB,YAAvB,MAAyC,KAA7C,EAAoD;AAChDvB,MAAAA,IAAI,GAAG,CAAC,MAAD,CAAP;AACAI,MAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,MAAzC;AACAD,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCL,IAAnC;AACH;;AACD,wBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AACI,MAAA,GAAG,EAAE,CADT;AAEI,MAAA,OAAO,EAAE,MAFb;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKM,SAAL,CAAe,MAAf,CAHnB;AAII,MAAA,WAAW,EACPF,cAAc,CAACmB,OAAf,CAAuB,gBAAvB,MAA6C,MAA7C,GACM,QADN,GAEM,EAPd;AASI,MAAA,SAAS,EAAE,KATf;AAUI,MAAA,QAAQ,EAAE,MAAM,KAAKP,SAAL,CAAe,CAAf,CAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAaKhB,IAAI,CAACwB,GAAL,CAAS,CAACjB,IAAD,EAAOU,KAAP,KACNV,IAAI,KAAK,MAAT,gBACI,oBAAC,GAAD;AACI,MAAA,GAAG,EAAEU,KADT;AAEI,MAAA,OAAO,EAAEV,IAFb;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKD,SAAL,CAAeC,IAAf,CAHnB;AAII,MAAA,WAAW,EACPH,cAAc,CAACmB,OAAf,CAAuB,gBAAvB,MACAhB,IADA,GAEM,QAFN,GAGM,EARd;AAUI,MAAA,QAAQ,EAAE,MAAM,KAAKS,SAAL,CAAeC,KAAf,CAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAcI,EAfP,CAbL,eA+BI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKP,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BJ,CADJ;AAmCH;;AAvG6C","sourcesContent":["import React from \"react\";\nimport NavItem from \"react-bootstrap/NavItem\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { Icon } from \"@iconify/react\";\nimport plusSquareOutlined from \"@iconify/icons-ant-design/plus-square-outlined\";\nimport xIcon from \"@iconify/icons-bi/x\";\n\nTab.defaultProps = {\n    showClose: true,\n};\n\nfunction Tab(props) {\n    return (\n        <NavItem>\n            <div\n                className={\n                    \"btn-dark tab-link nav-link \" +\n                    props.activeState +\n                    \" \" +\n                    (props.content === \"Main\" ? \"px-4 ml-2\" : \"\")\n                }\n                onClick={() => {\n                    props.onClick();\n                    obj.props.updateState();\n                }}\n            >\n                {props.content}\n                <Button\n                    className={\n                        \"p-0 remove-btn \" +\n                        props.activeState +\n                        \" \" +\n                        (!props.showClose ? \"d-none\" : \"\")\n                    }\n                    onClick={() => {\n                        props.onDelete();\n                        obj.props.updateState();\n                    }}\n                >\n                    <Icon icon={xIcon} />\n                </Button>\n            </div>\n        </NavItem>\n    );\n}\n\nfunction AddTab(props) {\n    return (\n        <NavItem>\n            <div\n                className={\"plus-btn btn-dark tab-link nav-link\"}\n                onClick={() => {\n                    props.onClick();\n                    obj.props.updateState();\n                }}\n            >\n                <Icon icon={plusSquareOutlined} width=\"25\" />\n            </div>\n        </NavItem>\n    );\n}\n\nexport let tabs = [\"Main\"];\nlet obj;\n\nexport default class Tabs extends React.Component {\n    constructor(props) {\n        super();\n        sessionStorage.setItem(\"currentCircuit\", \"Main\");\n        sessionStorage.setItem(\"circuits\", tabs);\n        obj = this;\n    }\n\n    setActive(name) {\n        if (tabs.includes(name)) {\n            sessionStorage.setItem(\"currentCircuit\", name);\n            this.setState({});\n        }\n    }\n\n    AddNewTab() {\n        let circuitName = prompt(\"Please enter the name of the circuit:\");\n        if (\n            circuitName != null &&\n            circuitName !== \"\" &&\n            !tabs.includes(circuitName) &&\n            circuitName.length <= 20\n        ) {\n            tabs.push(circuitName);\n            this.setState({});\n            this.setActive(tabs[tabs.length - 1]);\n            sessionStorage.setItem(\"circuits\", tabs);\n\n            this.props.updateState();\n        } else if (circuitName === \"\") {\n            alert(\"Circuit creation aborted because chosen name is invalid!\");\n        } else if (tabs.includes(circuitName)) {\n            alert(\n                \"Circuit creation aborted because chosen name already exists!\"\n            );\n        } else if (circuitName != null && circuitName.length > 20) {\n            alert(\n                \"Circuit creation aborted because name must be less than 21 characters long!\"\n            );\n        }\n    }\n\n    RemoveTab(index) {\n        let conf = window.confirm(\n            \"Are you sure you want to delete \" + tabs[index] + \"?\"\n        );\n\n        if (conf === true) {\n            tabs.splice(index, 1);\n            this.setState({});\n            if (tabs.length > index) {\n                this.setActive(tabs[index]);\n            } else {\n                this.setActive(tabs[tabs.length - 1]);\n            }\n\n            sessionStorage.setItem(\"circuits\", tabs);\n\n            this.props.updateState();\n        }\n    }\n\n    render() {\n        if (sessionStorage.getItem(\"NavCommand\") === \"New\") {\n            tabs = [\"Main\"];\n            sessionStorage.setItem(\"currentCircuit\", \"Main\");\n            sessionStorage.setItem(\"circuits\", tabs);\n        }\n        return (\n            <Nav className=\"nav-tabs\">\n                <Tab\n                    key={0}\n                    content={\"Main\"}\n                    onClick={() => this.setActive(\"Main\")}\n                    activeState={\n                        sessionStorage.getItem(\"currentCircuit\") === \"Main\"\n                            ? \"active\"\n                            : \"\"\n                    }\n                    showClose={false}\n                    onDelete={() => this.RemoveTab(0)}\n                />\n                {tabs.map((name, index) =>\n                    name !== \"Main\" ? (\n                        <Tab\n                            key={index}\n                            content={name}\n                            onClick={() => this.setActive(name)}\n                            activeState={\n                                sessionStorage.getItem(\"currentCircuit\") ===\n                                name\n                                    ? \"active\"\n                                    : \"\"\n                            }\n                            onDelete={() => this.RemoveTab(index)}\n                        />\n                    ) : (\n                        \"\"\n                    )\n                )}\n                <AddTab onClick={() => this.AddNewTab()} />\n            </Nav>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}