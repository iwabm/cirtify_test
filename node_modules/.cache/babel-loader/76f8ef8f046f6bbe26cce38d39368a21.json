{"ast":null,"code":"var _jsxFileName = \"/Users/iwabm/teknikio/circuify/src/Navbar.jsx\";\nimport React from \"react\";\nimport BNavbar from \"react-bootstrap/Navbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Col from \"react-bootstrap/Col\";\nimport { Icon } from \"@iconify/react\";\nimport integratedCircuit from \"@iconify/icons-wpf/integrated-circuit\";\nimport githubFilled from \"@iconify/icons-ant-design/github-filled\";\nimport twitterCircleFilled from \"@iconify/icons-ant-design/twitter-circle-filled\";\nimport redditCircleFilled from \"@iconify/icons-ant-design/reddit-circle-filled\";\n\nfunction NavTitle(props) {\n  return /*#__PURE__*/React.createElement(BNavbar.Brand, {\n    className: \"px-3\",\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: \"mr-2\",\n    icon: integratedCircuit,\n    width: \"25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Circuify\"));\n}\n\nfunction IconLink(props) {\n  return /*#__PURE__*/React.createElement(\"a\", {\n    className: \"mr-2\",\n    href: props.redirect,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: props.source,\n    width: \"30\",\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction NavOption(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"secondary\",\n    style: {\n      backgroundColor: \"transparent\",\n      border: 0\n    },\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, props.name), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, props.options.map((item, index) => /*#__PURE__*/React.createElement(Dropdown.Item, {\n    key: index,\n    onClick: () => {\n      item.action();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, item.name))));\n}\n\nlet navProps;\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super();\n    navProps = props;\n  }\n\n  New() {\n    if (window.confirm(\"Are you sure you want to start over?\")) {\n      sessionStorage.setItem(\"NavCommand\", \"New\");\n      navProps.updateState();\n    }\n  }\n\n  Close() {\n    window.close();\n  }\n\n  DeleteSelection() {\n    sessionStorage.setItem(\"NavCommand\", \"Delete Selection\");\n  }\n\n  SelectAll() {\n    sessionStorage.setItem(\"NavCommand\", \"Select All\");\n  }\n\n  SelectNone() {\n    sessionStorage.setItem(\"NavCommand\", \"Select None\");\n  }\n\n  ZoomIn() {\n    sessionStorage.setItem(\"NavCommand\", \"Zoom In\");\n  }\n\n  ZoomOut() {\n    sessionStorage.setItem(\"NavCommand\", \"Zoom Out\");\n  }\n\n  RunSimulation() {\n    sessionStorage.setItem(\"NavCommand\", \"Run Simulation\");\n  }\n\n  PauseSimulation() {\n    sessionStorage.setItem(\"NavCommand\", \"Pause Simulation\");\n  }\n\n  GithubRepository() {\n    window.open(\"https://github.com/StefanJo3107/logic-circuit-playground\", \"_blank\", \"noopener,noreferrer\");\n  }\n\n  Tutorial() {\n    navProps.setTutorialShow(true);\n    navProps.setTutorialPage(-1);\n    navProps.updateState();\n  }\n\n  About() {\n    navProps.setTutorialShow(true);\n    navProps.setTutorialPage(0);\n    navProps.updateState();\n  }\n\n  render() {\n    const fileOptions = [{\n      name: \"New\",\n      action: this.New\n    }, {\n      name: \"Close\",\n      action: this.Close\n    }];\n    const editOptions = [{\n      name: \"Delete Selection\",\n      action: this.DeleteSelection\n    }, {\n      name: \"Select All\",\n      action: this.SelectAll\n    }, {\n      name: \"Select None\",\n      action: this.SelectNone\n    }];\n    const viewOptions = [{\n      name: \"Zoom In\",\n      action: this.ZoomIn\n    }, {\n      name: \"Zoom Out\",\n      action: this.ZoomOut\n    }];\n    const runOptions = [{\n      name: \"Run Simulation\",\n      action: this.RunSimulation\n    }, {\n      name: \"Pause Simulation\",\n      action: this.PauseSimulation\n    }];\n    const helpOptions = [{\n      name: \"Github Repository\",\n      action: this.GithubRepository\n    }, {\n      name: \"Tutorial\",\n      action: this.Tutorial\n    }, {\n      name: \"About\",\n      action: this.About\n    }];\n    return /*#__PURE__*/React.createElement(BNavbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      className: \"shadow flex-md-nowrap p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      lg: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(NavOption, {\n      updateState: () => this.New(),\n      name: \"File\",\n      options: fileOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavOption, {\n      name: \"Edit\",\n      options: editOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavOption, {\n      name: \"View\",\n      options: viewOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavOption, {\n      name: \"Run\",\n      options: runOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(NavOption, {\n      name: \"Help\",\n      options: helpOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconLink, {\n      redirect: \"https://github.com/StefanJo3107\",\n      source: githubFilled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconLink, {\n      redirect: \"https://twitter.com/SJovGD\",\n      source: twitterCircleFilled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(IconLink, {\n      redirect: \"https://www.reddit.com/user/sjovanovic3107\",\n      source: redditCircleFilled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/iwabm/teknikio/circuify/src/Navbar.jsx"],"names":["React","BNavbar","Dropdown","Col","Icon","integratedCircuit","githubFilled","twitterCircleFilled","redditCircleFilled","NavTitle","props","IconLink","redirect","source","NavOption","backgroundColor","border","name","options","map","item","index","action","navProps","Navbar","Component","constructor","New","window","confirm","sessionStorage","setItem","updateState","Close","close","DeleteSelection","SelectAll","SelectNone","ZoomIn","ZoomOut","RunSimulation","PauseSimulation","GithubRepository","open","Tutorial","setTutorialShow","setTutorialPage","About","render","fileOptions","editOptions","viewOptions","runOptions","helpOptions"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BNavbar from \"react-bootstrap/Navbar\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Col from \"react-bootstrap/Col\";\nimport { Icon } from \"@iconify/react\";\nimport integratedCircuit from \"@iconify/icons-wpf/integrated-circuit\";\nimport githubFilled from \"@iconify/icons-ant-design/github-filled\";\nimport twitterCircleFilled from \"@iconify/icons-ant-design/twitter-circle-filled\";\nimport redditCircleFilled from \"@iconify/icons-ant-design/reddit-circle-filled\";\n\nfunction NavTitle(props) {\n    return (\n        <BNavbar.Brand className=\"px-3\" href=\"#\">\n            <Icon className=\"mr-2\" icon={integratedCircuit} width=\"25\" />\n            <span className=\"Title\">Circuify</span>\n        </BNavbar.Brand>\n    );\n}\n\nfunction IconLink(props) {\n    return (\n        <a\n            className=\"mr-2\"\n            href={props.redirect}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            <Icon icon={props.source} width=\"30\" color=\"white\" />\n        </a>\n    );\n}\n\nfunction NavOption(props) {\n    return (\n        <Dropdown className=\"mr-2\">\n            <Dropdown.Toggle\n                variant=\"secondary\"\n                style={{ backgroundColor: \"transparent\", border: 0 }}\n                id=\"dropdown-basic\"\n            >\n                {props.name}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                {props.options.map((item, index) => (\n                    <Dropdown.Item\n                        key={index}\n                        onClick={() => {\n                            item.action();\n                        }}\n                    >\n                        {item.name}\n                    </Dropdown.Item>\n                ))}\n                {/* <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item> */}\n            </Dropdown.Menu>\n        </Dropdown>\n    );\n}\nlet navProps;\nexport default class Navbar extends React.Component {\n    constructor(props) {\n        super();\n        navProps = props;\n    }\n\n    New() {\n        if (window.confirm(\"Are you sure you want to start over?\")) {\n            sessionStorage.setItem(\"NavCommand\", \"New\");\n            navProps.updateState();\n        }\n    }\n\n    Close() {\n        window.close();\n    }\n\n    DeleteSelection() {\n        sessionStorage.setItem(\"NavCommand\", \"Delete Selection\");\n    }\n\n    SelectAll() {\n        sessionStorage.setItem(\"NavCommand\", \"Select All\");\n    }\n\n    SelectNone() {\n        sessionStorage.setItem(\"NavCommand\", \"Select None\");\n    }\n\n    ZoomIn() {\n        sessionStorage.setItem(\"NavCommand\", \"Zoom In\");\n    }\n\n    ZoomOut() {\n        sessionStorage.setItem(\"NavCommand\", \"Zoom Out\");\n    }\n\n    RunSimulation() {\n        sessionStorage.setItem(\"NavCommand\", \"Run Simulation\");\n    }\n\n    PauseSimulation() {\n        sessionStorage.setItem(\"NavCommand\", \"Pause Simulation\");\n    }\n\n    GithubRepository() {\n        window.open(\n            \"https://github.com/StefanJo3107/logic-circuit-playground\",\n            \"_blank\",\n            \"noopener,noreferrer\"\n        );\n    }\n\n    Tutorial() {\n        navProps.setTutorialShow(true);\n        navProps.setTutorialPage(-1);\n        navProps.updateState();\n    }\n\n    About() {\n        navProps.setTutorialShow(true);\n        navProps.setTutorialPage(0);\n        navProps.updateState();\n    }\n\n    render() {\n        const fileOptions = [\n            {\n                name: \"New\",\n                action: this.New,\n            },\n            {\n                name: \"Close\",\n                action: this.Close,\n            },\n        ];\n\n        const editOptions = [\n            {\n                name: \"Delete Selection\",\n                action: this.DeleteSelection,\n            },\n            {\n                name: \"Select All\",\n                action: this.SelectAll,\n            },\n            {\n                name: \"Select None\",\n                action: this.SelectNone,\n            },\n        ];\n\n        const viewOptions = [\n            {\n                name: \"Zoom In\",\n                action: this.ZoomIn,\n            },\n            {\n                name: \"Zoom Out\",\n                action: this.ZoomOut,\n            },\n        ];\n\n        const runOptions = [\n            {\n                name: \"Run Simulation\",\n                action: this.RunSimulation,\n            },\n            {\n                name: \"Pause Simulation\",\n                action: this.PauseSimulation,\n            },\n        ];\n\n        const helpOptions = [\n            {\n                name: \"Github Repository\",\n                action: this.GithubRepository,\n            },\n            {\n                name: \"Tutorial\",\n                action: this.Tutorial,\n            },\n            {\n                name: \"About\",\n                action: this.About,\n            },\n        ];\n        return (\n            <BNavbar\n                bg=\"dark\"\n                variant=\"dark\"\n                className=\"shadow flex-md-nowrap p-1\"\n            >\n                <Col md={3} lg={2}>\n                    <NavTitle />\n                </Col>\n                <NavOption\n                    updateState={() => this.New()}\n                    name=\"File\"\n                    options={fileOptions}\n                />\n                <NavOption name=\"Edit\" options={editOptions} />\n                <NavOption name=\"View\" options={viewOptions} />\n                <NavOption name=\"Run\" options={runOptions} />\n                <NavOption name=\"Help\" options={helpOptions} />\n                <div className=\"ml-auto\">\n                    <IconLink\n                        redirect=\"https://github.com/StefanJo3107\"\n                        source={githubFilled}\n                    />\n                    <IconLink\n                        redirect=\"https://twitter.com/SJovGD\"\n                        source={twitterCircleFilled}\n                    />\n                    <IconLink\n                        redirect=\"https://www.reddit.com/user/sjovanovic3107\"\n                        source={redditCircleFilled}\n                    />\n                </div>\n            </BNavbar>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}